package co.syscoop.soberano.test.generation;

import org.apache.commons.lang3.ArrayUtils;

import co.syscoop.soberano.rules.enforcer.generator.LogicalQueriesBatch;

public class LogicalQueriesForSoberanoInstance extends LogicalQueriesBatch {
	
	public LogicalQueriesForSoberanoInstance() {
		LogicalQueriesForSoberanoMetamodel logicalQueriesForSoberanoMetamodel = new LogicalQueriesForSoberanoMetamodel();
		super.setBatch(ArrayUtils.addAll(logicalQueriesForSoberanoMetamodel.getBatch(),
				new String[] {
						//////////////////////////////////////////////////////////////////////////////////
						// rules not generated. see the notes in the soberano instance conceptual model //
						//////////////////////////////////////////////////////////////////////////////////
						
						"--assure only one activity instance exists. the default stage is 2 (Enabled)\n"
						+ "CREATE OR REPLACE FUNCTION soberano.\"fn_tg_Activity_beforeinsert_RULE_EXISTENCE_1\"()\n"
						+ "						    RETURNS trigger\n"
						+ "						    LANGUAGE 'plpgsql'\n"
						+ "						    COST 100\n"
						+ "						    VOLATILE NOT LEAKPROOF\n"
						+ "	AS \n"
						+ "$BODY$\n"
						+ "	BEGIN\n"
						+ "		DELETE FROM soberano.\"Activity\";\n"
						+ "		DELETE FROM metamodel.\"EntityTypeInstance\" WHERE \"EntityTypeInstanceHasEntityTypeInstanceId\" = 1;\n"
						+ "		INSERT INTO metamodel.\"EntityTypeInstance\" (\"EntityTypeInstanceHasEntityTypeInstanceId\", \n"
						+ "													\"This_is_created_at_Timestamp\", \n"
						+ "													\"This_is_instance_of_EntityType_with_MeaningHasMeaningId\", \n"
						+ "													\"This_is_owned_by_Authority_with_AuthorityHasAuthorityId\", \n"
						+ "													\"This_is_in_Stage_with_StageHasStageId\", \n"
						+ "													\"This_is_created_by_User_with_UserHasUserId\")\n"
						+ "			VALUES (1, \n"
						+ "					now(), \n"
						+ "					'_D205391E-37D6-4AA6-B226-88E7A84B0C70', \n"
						+ "					1, \n"
						+ "					2, \n"
						+ "					1);\n"
						+ "		NEW.\"ActivityHasActivityId\" := 1;\n"
						+ "		NEW.\"This_is_identified_by_EntityTypeInstance_id\" := 1;\n"
						+ "		RETURN NEW;\n"
						+ "	END;\n"
						+ "$BODY$;\n"
						+ "\n"
						+ "CREATE TRIGGER \"tg_Activity_before_insert_RULE_EXISTENCE_1\"\n"
						+ "	BEFORE INSERT\n"
						+ "	ON soberano.\"Activity\"\n"
						+ "	FOR EACH ROW\n"
						+ "	EXECUTE FUNCTION soberano.\"fn_tg_Activity_beforeinsert_RULE_EXISTENCE_1\"();",
						
						
						
						"--assure only one configuration instance exists. the default stage is 2 (Enabled)\n"
						+ "CREATE OR REPLACE FUNCTION soberano.\"fn_tg_Configuration_beforeinsert_RULE_EXISTENCE_2\"()\n"
						+ "						    RETURNS trigger\n"
						+ "						    LANGUAGE 'plpgsql'\n"
						+ "						    COST 100\n"
						+ "						    VOLATILE NOT LEAKPROOF\n"
						+ "	AS \n"
						+ "$BODY$\n"
						+ "	BEGIN\n"
						+ "		DELETE FROM soberano.\"Configuration\";\n"
						+ "		DELETE FROM metamodel.\"EntityTypeInstance\" WHERE \"EntityTypeInstanceHasEntityTypeInstanceId\" = 2;\n"
						+ "		INSERT INTO metamodel.\"EntityTypeInstance\" (\"EntityTypeInstanceHasEntityTypeInstanceId\", \n"
						+ "													\"This_is_created_at_Timestamp\", \n"
						+ "													\"This_is_instance_of_EntityType_with_MeaningHasMeaningId\", \n"
						+ "													\"This_is_owned_by_Authority_with_AuthorityHasAuthorityId\", \n"
						+ "													\"This_is_in_Stage_with_StageHasStageId\", \n"
						+ "													\"This_is_created_by_User_with_UserHasUserId\")\n"
						+ "			VALUES (2, \n"
						+ "					now(), \n"
						+ "					'_CA784430-45B2-4403-9257-1D3906C164D1', \n"
						+ "					1, \n"
						+ "					2, \n"
						+ "					1);\n"
						+ "		NEW.\"ConfigurationHasConfigurationId\" := 1;\n"
						+ "		NEW.\"This_is_identified_by_EntityTypeInstance_id\" := 2;\n"
						+ "		RETURN NEW;\n"
						+ "	END;\n"
						+ "$BODY$;\n"
						+ "\n"
						+ "CREATE TRIGGER \"tg_Configuration_before_insert_RULE_EXISTENCE_2\"\n"
						+ "	BEFORE INSERT\n"
						+ "	ON soberano.\"Configuration\"\n"
						+ "	FOR EACH ROW\n"
						+ "	EXECUTE FUNCTION soberano.\"fn_tg_Configuration_beforeinsert_RULE_EXISTENCE_2\"();",
						
						
						
						"--assure only one catalog instance exists. the default stage is 2 (Enabled)\n"
						+ "CREATE OR REPLACE FUNCTION soberano.\"fn_tg_Catalog_beforeinsert_RULE_EXISTENCE_3\"()\n"
						+ "						    RETURNS trigger\n"
						+ "						    LANGUAGE 'plpgsql'\n"
						+ "						    COST 100\n"
						+ "						    VOLATILE NOT LEAKPROOF\n"
						+ "	AS \n"
						+ "$BODY$\n"
						+ "	BEGIN\n"
						+ "		DELETE FROM soberano.\"Catalog\";\n"
						+ "		DELETE FROM metamodel.\"EntityTypeInstance\" WHERE \"EntityTypeInstanceHasEntityTypeInstanceId\" = 3;\n"
						+ "		INSERT INTO metamodel.\"EntityTypeInstance\" (\"EntityTypeInstanceHasEntityTypeInstanceId\", \n"
						+ "													\"This_is_created_at_Timestamp\", \n"
						+ "													\"This_is_instance_of_EntityType_with_MeaningHasMeaningId\", \n"
						+ "													\"This_is_owned_by_Authority_with_AuthorityHasAuthorityId\", \n"
						+ "													\"This_is_in_Stage_with_StageHasStageId\", \n"
						+ "													\"This_is_created_by_User_with_UserHasUserId\")\n"
						+ "			VALUES (3, \n"
						+ "					now(), \n"
						+ "					'_94C0BD6E-5DED-4F46-95DA-994C881B6271', \n"
						+ "					1, \n"
						+ "					2, \n"
						+ "					1);\n"
						+ "		NEW.\"CatalogHasCatalogId\" := 1;\n"
						+ "		NEW.\"This_is_identified_by_EntityTypeInstance_id\" := 3;\n"
						+ "		RETURN NEW;\n"
						+ "	END;\n"
						+ "$BODY$;\n"
						+ "\n"
						+ "CREATE TRIGGER \"tg_Catalog_before_insert_RULE_EXISTENCE_3\"\n"
						+ "	BEFORE INSERT\n"
						+ "	ON soberano.\"Catalog\"\n"
						+ "	FOR EACH ROW\n"
						+ "	EXECUTE FUNCTION soberano.\"fn_tg_Catalog_beforeinsert_RULE_EXISTENCE_3\"();",
						
						
						
						"--assure only one cash register instance exists. the default stage is 2 (Enabled)\n"
						+ "CREATE OR REPLACE FUNCTION soberano.\"fn_tg_CashRegister_beforeinsert_RULE_EXISTENCE_4\"()\n"
						+ "						    RETURNS trigger\n"
						+ "						    LANGUAGE 'plpgsql'\n"
						+ "						    COST 100\n"
						+ "						    VOLATILE NOT LEAKPROOF\n"
						+ "	AS \n"
						+ "$BODY$\n"
						+ "	BEGIN\n"
						+ "		DELETE FROM soberano.\"CashRegister\";\n"
						+ "		DELETE FROM metamodel.\"EntityTypeInstance\" WHERE \"EntityTypeInstanceHasEntityTypeInstanceId\" = 4;\n"
						+ "		INSERT INTO metamodel.\"EntityTypeInstance\" (\"EntityTypeInstanceHasEntityTypeInstanceId\", \n"
						+ "													\"This_is_created_at_Timestamp\", \n"
						+ "													\"This_is_instance_of_EntityType_with_MeaningHasMeaningId\", \n"
						+ "													\"This_is_owned_by_Authority_with_AuthorityHasAuthorityId\", \n"
						+ "													\"This_is_in_Stage_with_StageHasStageId\", \n"
						+ "													\"This_is_created_by_User_with_UserHasUserId\")\n"
						+ "			VALUES (4, \n"
						+ "					now(), \n"
						+ "					'_7E0F5DAA-21DB-433E-BFBF-F4437F3E0FE9', \n"
						+ "					1, \n"
						+ "					2, \n"
						+ "					1);\n"
						+ "		NEW.\"CashRegisterHasCashRegisterId\" := 1;\n"
						+ "		NEW.\"This_is_identified_by_EntityTypeInstance_id\" := 4;\n"
						+ "		RETURN NEW;\n"
						+ "	END;\n"
						+ "$BODY$;\n"
						+ "\n"
						+ "CREATE TRIGGER \"tg_CashRegister_before_insert_RULE_EXISTENCE_4\"\n"
						+ "	BEFORE INSERT\n"
						+ "	ON soberano.\"CashRegister\"\n"
						+ "	FOR EACH ROW\n"
						+ "	EXECUTE FUNCTION soberano.\"fn_tg_CashRegister_beforeinsert_RULE_EXISTENCE_4\"();",
						
						
						
						///////////////////////////////
						// foreign keys to metamodel //
						///////////////////////////////
						"ALTER TABLE soberano.\"Activity\"\n"
						+ "  ADD CONSTRAINT \"Activity_This_is_identified_by_EntityTypeInstance_id_fkey\" FOREIGN KEY (\"This_is_identified_by_EntityTypeInstance_id\")\n"
						+ "      REFERENCES \"metamodel\".\"EntityTypeInstance\" (\"EntityTypeInstanceHasEntityTypeInstanceId\") MATCH SIMPLE\n"
						+ "      ON UPDATE CASCADE ON DELETE CASCADE;",
						
						
						
						"ALTER TABLE soberano.\"Counter\"\n"
						+ "  ADD CONSTRAINT \"Counter_This_is_identified_by_EntityTypeInstance_id_fkey\" FOREIGN KEY (\"This_is_identified_by_EntityTypeInstance_id\")\n"
						+ "      REFERENCES \"metamodel\".\"EntityTypeInstance\" (\"EntityTypeInstanceHasEntityTypeInstanceId\") MATCH SIMPLE\n"
						+ "      ON UPDATE CASCADE ON DELETE CASCADE;",
								
								
								
						"ALTER TABLE soberano.\"Order\"\n"
						+ "  ADD CONSTRAINT \"Order_This_is_identified_by_EntityTypeInstance_id_fkey\" FOREIGN KEY (\"This_is_identified_by_EntityTypeInstance_id\")\n"
						+ "      REFERENCES \"metamodel\".\"EntityTypeInstance\" (\"EntityTypeInstanceHasEntityTypeInstanceId\") MATCH SIMPLE\n"
						+ "      ON UPDATE CASCADE ON DELETE CASCADE;",
						
						
						
						"ALTER TABLE soberano.\"Configuration\"\n"
						+ "  ADD CONSTRAINT \"Configuration_This_is_identified_by_EntityTypeInstance_id_fkey\" FOREIGN KEY (\"This_is_identified_by_EntityTypeInstance_id\")\n"
						+ "      REFERENCES \"metamodel\".\"EntityTypeInstance\" (\"EntityTypeInstanceHasEntityTypeInstanceId\") MATCH SIMPLE\n"
						+ "      ON UPDATE CASCADE ON DELETE CASCADE;",
								
								
								
						"ALTER TABLE soberano.\"Catalog\"\n"
						+ "  ADD CONSTRAINT \"Catalog_This_is_identified_by_EntityTypeInstance_id_fkey\" FOREIGN KEY (\"This_is_identified_by_EntityTypeInstance_id\")\n"
						+ "      REFERENCES \"metamodel\".\"EntityTypeInstance\" (\"EntityTypeInstanceHasEntityTypeInstanceId\") MATCH SIMPLE\n"
						+ "      ON UPDATE CASCADE ON DELETE CASCADE;",
								
						
								
						"ALTER TABLE soberano.\"CashRegister\"\n"
						+ "  ADD CONSTRAINT \"CashRegister_This_is_identified_by_EntityTypeInstance_id_fkey\" FOREIGN KEY (\"This_is_identified_by_EntityTypeInstance_id\")\n"
						+ "      REFERENCES \"metamodel\".\"EntityTypeInstance\" (\"EntityTypeInstanceHasEntityTypeInstanceId\") MATCH SIMPLE\n"
						+ "      ON UPDATE CASCADE ON DELETE CASCADE;",
						
						
						
						"ALTER TABLE soberano.\"Worker\"\n"
								+ "  ADD CONSTRAINT \"Worker_This_is_identified_by_EntityTypeInstance_id_fkey\" FOREIGN KEY (\"This_is_identified_by_EntityTypeInstance_id\")\n"
								+ "      REFERENCES \"metamodel\".\"EntityTypeInstance\" (\"EntityTypeInstanceHasEntityTypeInstanceId\") MATCH SIMPLE\n"
								+ "      ON UPDATE CASCADE ON DELETE CASCADE;",
						
						
						
						/////////////////////////////////////
						// business organization structure //
						/////////////////////////////////////
						
						"--add responsibilities\n"
						+ "--responsibility 1 is reserved for soberano.responsibility.top\n"
						+ "INSERT INTO \"metamodel\".\"Responsibility\" (\"ResponsibilityHasResponsibilityId\",\n"
						+ "						\"This_has_Name\")	\n"
						+ "	VALUES (2, 'Manager'),\n"
						+ "		(3, 'Accounter'),\n"
						+ "		(4, 'Salesclerk'),\n"
						+ "		(5, 'Shift manager'),\n"
						+ "		(6, 'Checker'),\n"
						+ "		(7, 'Auditor'),\n"
						+ "		(8, 'Workshop 1 worker'),\n"
						+ "		(9, 'Workshop 2 worker'),\n"
						+ "		(10, 'Storekeeper'),\n"
						+ "		(11, 'Catalog maintainer'),\n"
						+ "		(12, 'Community manager'),\n"
						+ "		(13, 'Procurement worker'),\n"
						+ "		(14, 'System admin');",
						
						
												
						"--assign top user to all responsibilities\n"
						+ "SELECT \"metamodel\".\"fn_User_assignToResponsibilities\"(1, ARRAY[2,3,4,5,6,7,8,9,10,11,12,13,14], ARRAY[1,1,1,1,1,1,1,1,1,1,1,1,1]);",
						
							
												
						/////////////////////////////////////
						// business dynamics configuration //
						/////////////////////////////////////
						
						"--life cycles\n"
						+ "INSERT INTO \"metamodel\".\"LifeCycle\" (\"LifeCycleHasLifeCycleId\",\n"
						+ "					\"This_has_Name\",\n"
						+ "					\"This_is_for_EntityType_with_MeaningHasMeaningId\")\n"
						+ "	VALUES (1, 'Activity', '_D205391E-37D6-4AA6-B226-88E7A84B0C70'),\n"
						+ "			(2, 'Counter', '_0126EFEB-6646-4C9C-B0C2-28EB3B25E3A7'),\n"
						+ "			(3, 'Order', '_BD3DEF99-C7B5-4A31-BD72-FCC02EDB6355'),\n"
						+ "			(4, 'Configuration', '_CA784430-45B2-4403-9257-1D3906C164D1'),\n"
						+ "			(5, 'Catalog', '_94C0BD6E-5DED-4F46-95DA-994C881B6271'),\n"
						+ " 		(6, 'Worker', '_2632E1D8-8D63-4DD4-9FA0-A19C0250A09B');",
						
						
						
						"--lifecycle deployment across top authority\n"
						+ "INSERT INTO \"metamodel\".\"LifeCycleIsDeployedAcrossAuthority\" (\"LifeCycleHasLifeCycleId\",\n"
						+ "								\"AuthorityHasAuthorityId\")\n"
						+ "	VALUES (1, 1),\n"
						+ "	 (2, 1),\n"
						+ "	 (3, 1),\n"
						+ "	 (4, 1),\n"
						+ "	 (5, 1),\n"
						+ "  (6, 1);",
												
						
						
						"--add lifecycle stages under top authority jurisdiction\n"
						+ "--stage 1 is reserved for soberano.stage.starting\n"
						+ "INSERT INTO \"metamodel\".\"Stage\" (\"StageHasStageId\", \"This_has_Name\", \"This_is_under_jurisdiction_of_Authority_with_AuthorityHasAuthor\")\n"
						+ "							VALUES (2, 'Enabled', 1),\n"
						+ "								(3, 'Ongoing', 1),\n"
						+ "								(4, 'Recorded', 1),\n"
						+ "								(5, 'Canceled', 1),\n"
						+ "								(6, 'Closed', 1),\n"
						+ "								(7, 'Honored', 1),\n"
						+ "								(8, 'Disabled', 1),\n"
						+ "								(9, 'Dishonored', 1);",
						
						
						
						"/* activity lifecycle */\n"
						+ "\n"
						+ "--stage filters\n"
						+ "INSERT INTO \"metamodel\".\"StageFilter\" (\"StageFilterHasStageFilterId\",\n"
						+ "					\"This_filters_by_FilterExpression\", \n"
						+ "					\"This_belongs_to_LifeCycle_with_LifeCycleHasLifeCycleId\")\n"
						+ "	VALUES (1001, 'Enabled', 1);\n"
						+ "			\n"
						+ "--decisions\n"
						+ "INSERT INTO \"metamodel\".\"Decision\" (\"DecisionHasDecisionId\",\n"
						+ "					\"This_has_Name\",\n"
						+ "					\"This_belongs_to_LifeCycle_with_LifeCycleHasLifeCycleId\",\n"
						+ "					\"This_causes_advance_from_StageFilter_with_StageFilterHasStageFi\",\n"
						+ "					\"This_causes_advance_to_StageFilter_with_StageFilterHasStageFilt\",\n"
						+ "					\"Decision_is_contextual\")\n"
						+ "	VALUES (1001, 'Check', 1, 1001, 1001, 'false');\n"
						+ "			\n"
						+ "--responsability filters\n"
						+ "INSERT INTO \"metamodel\".\"ResponsibilityFilter\" (\"This_belongs_to_LifeCycle_with_LifeCycleHasLifeCycleId\",\n"
						+ "							\"This_filters_by_FilterExpression\",\n"
						+ "							\"This_filters_by_Decision_with_DecisionHasDecisionId\")\n"
						+ "			VALUES (1, 'Manager', 1001),\n"
						+ "				(1, 'Salesclerk', 1001),\n"
						+ "				(1, 'Shift manager', 1001),\n"
						+ "				(1, 'Checker', 1001),\n"
						+ "				(1, 'Auditor', 1001),\n"
						+ "				(1, 'System admin', 1001);",
						
						
						
						"/* counter lifecycle */\n"
						+ "\n"
						+ "--stage filters\n"
						+ "INSERT INTO \"metamodel\".\"StageFilter\" (\"StageFilterHasStageFilterId\",\n"
						+ "					\"This_filters_by_FilterExpression\", \n"
						+ "					\"This_belongs_to_LifeCycle_with_LifeCycleHasLifeCycleId\")\n"
						+ "	VALUES (2001, 'soberano.stage.starting', 2),\n"
						+ "		(2002, 'Enabled', 2),\n"
						+ "		(2003, 'Disabled', 2);\n"
						+ "			\n"
						+ "--decisions\n"
						+ "INSERT INTO \"metamodel\".\"Decision\" (\"DecisionHasDecisionId\",\n"
						+ "					\"This_has_Name\",\n"
						+ "					\"This_belongs_to_LifeCycle_with_LifeCycleHasLifeCycleId\",\n"
						+ "					\"This_causes_advance_from_StageFilter_with_StageFilterHasStageFi\",\n"
						+ "					\"This_causes_advance_to_StageFilter_with_StageFilterHasStageFilt\",\n"
						+ "					\"Decision_is_contextual\")\n"
						+ "	VALUES (2001, 'Add', 2, 2001, 2002, 'false'),\n"
						+ "		(2002, 'Apply', 2, 2002, 2002, 'false'),\n"
						+ "		(2003, 'Disable', 2, 2002, 2003, 'false'),\n"
						+ "		(2004, 'Check', 2, 2002, 2002, 'false');\n"
						+ "			\n"
						+ "--responsability filters\n"
						+ "INSERT INTO \"metamodel\".\"ResponsibilityFilter\" (\"This_belongs_to_LifeCycle_with_LifeCycleHasLifeCycleId\",\n"
						+ "							\"This_filters_by_FilterExpression\",\n"
						+ "							\"This_filters_by_Decision_with_DecisionHasDecisionId\")\n"
						+ "			VALUES (2, 'Manager', 2001),\n"
						+ "				(2, 'System admin', 2001),\n"
						+ "				(2, 'Manager', 2002),\n"
						+ "				(2, 'System admin', 2002),\n"
						+ "				(2, 'Manager', 2003),\n"
						+ "				(2, 'System admin', 2003),\n"
						+ "				(2, 'Auditor', 2004);",
						
						
						
						"/* order lifecycle */\n"
						+ "\n"
						+ "--stage filters\n"
						+ "INSERT INTO \"metamodel\".\"StageFilter\" (\"StageFilterHasStageFilterId\",\n"
						+ "					\"This_filters_by_FilterExpression\", \n"
						+ "					\"This_belongs_to_LifeCycle_with_LifeCycleHasLifeCycleId\")\n"
						+ "	VALUES (3001, 'soberano.stage.starting', 3),\n"
						+ "		(3002, 'Ongoing', 3),\n"
						+ "		(3003, 'Closed', 3);\n"
						+ "			\n"
						+ "--decisions\n"
						+ "INSERT INTO \"metamodel\".\"Decision\" (\"DecisionHasDecisionId\",\n"
						+ "					\"This_has_Name\",\n"
						+ "					\"This_belongs_to_LifeCycle_with_LifeCycleHasLifeCycleId\",\n"
						+ "					\"This_causes_advance_from_StageFilter_with_StageFilterHasStageFi\",\n"
						+ "					\"This_causes_advance_to_StageFilter_with_StageFilterHasStageFilt\",\n"
						+ "					\"Decision_is_contextual\")\n"
						+ "	VALUES (3001, 'Open', 3, 3001, 3002, 'false'),\n"
						+ "		(3002, 'Make', 3, 3002, 3002, 'false'),\n"
						+ "		(3003, 'Collect', 3, 3002, 3002, 'false'),\n"
						+ "		(3004, 'Close', 3, 3002, 3003, 'false'),\n"
						+ "		(3005, 'Check', 3, 3002, 3002, 'false');\n"
						+ "			\n"
						+ "--responsability filters\n"
						+ "INSERT INTO \"metamodel\".\"ResponsibilityFilter\" (\"This_belongs_to_LifeCycle_with_LifeCycleHasLifeCycleId\",\n"
						+ "							\"This_filters_by_FilterExpression\",\n"
						+ "							\"This_filters_by_Decision_with_DecisionHasDecisionId\")\n"
						+ "			VALUES (3, 'Manager', 3001),\n"
						+ "				(3, 'Salesclerk', 3001),\n"
						+ "				(3, 'Shift manager', 3001),\n"
						+ "				(3, 'Manager', 3002),\n"
						+ "				(3, 'Salesclerk', 3002),\n"
						+ "				(3, 'Shift manager', 3002),\n"
						+ "				(3, 'Manager', 3003),\n"
						+ "				(3, 'Shift manager', 3003),\n"
						+ "				(3, 'Checker', 3003),\n"
						+ "				(3, 'Manager', 3004),\n"
						+ "				(3, 'Shift manager', 3004),\n"
						+ "				(3, 'Checker', 3004),\n"
						+ "				(3, 'Auditor', 3005);",
						
						
						
						"/* configuration lifecycle */\n"
						+ "\n"
						+ "--stage filters\n"
						+ "INSERT INTO \"metamodel\".\"StageFilter\" (\"StageFilterHasStageFilterId\",\n"
						+ "					\"This_filters_by_FilterExpression\", \n"
						+ "					\"This_belongs_to_LifeCycle_with_LifeCycleHasLifeCycleId\")\n"
						+ "	VALUES (4001, 'Enabled', 4);\n"
						+ "			\n"
						+ "--decisions\n"
						+ "INSERT INTO \"metamodel\".\"Decision\" (\"DecisionHasDecisionId\",\n"
						+ "					\"This_has_Name\",\n"
						+ "					\"This_belongs_to_LifeCycle_with_LifeCycleHasLifeCycleId\",\n"
						+ "					\"This_causes_advance_from_StageFilter_with_StageFilterHasStageFi\",\n"
						+ "					\"This_causes_advance_to_StageFilter_with_StageFilterHasStageFilt\",\n"
						+ "					\"Decision_is_contextual\")\n"
						+ "	VALUES (4001, 'Check', 4, 4001, 4001, 'false'),\n"
						+ "		(4002, 'Apply', 4, 4001, 4001, 'false');\n"
						+ "			\n"
						+ "--responsability filters\n"
						+ "INSERT INTO \"metamodel\".\"ResponsibilityFilter\" (\"This_belongs_to_LifeCycle_with_LifeCycleHasLifeCycleId\",\n"
						+ "							\"This_filters_by_FilterExpression\",\n"
						+ "							\"This_filters_by_Decision_with_DecisionHasDecisionId\")\n"
						+ "			VALUES (4, 'Manager', 4001),\n"
						+ "				(4, 'System admin', 4001),\n"
						+ "				(4, 'Manager', 4002),\n"
						+ "				(4, 'System admin', 4002);",
						
						
						
						"/* catalog lifecycle */\n"
						+ "\n"
						+ "--stage filters\n"
						+ "INSERT INTO \"metamodel\".\"StageFilter\" (\"StageFilterHasStageFilterId\",\n"
						+ "					\"This_filters_by_FilterExpression\", \n"
						+ "					\"This_belongs_to_LifeCycle_with_LifeCycleHasLifeCycleId\")\n"
						+ "	VALUES (5001, 'Enabled', 5);\n"
						+ "			\n"
						+ "--decisions\n"
						+ "INSERT INTO \"metamodel\".\"Decision\" (\"DecisionHasDecisionId\",\n"
						+ "					\"This_has_Name\",\n"
						+ "					\"This_belongs_to_LifeCycle_with_LifeCycleHasLifeCycleId\",\n"
						+ "					\"This_causes_advance_from_StageFilter_with_StageFilterHasStageFi\",\n"
						+ "					\"This_causes_advance_to_StageFilter_with_StageFilterHasStageFilt\",\n"
						+ "					\"Decision_is_contextual\")\n"
						+ "	VALUES (5001, 'Check', 5, 5001, 5001, 'false'),\n"
						+ "		(5002, 'Apply', 5, 5001, 5001, 'false'),\n"
						+ "		(5003, 'Export', 5, 5001, 5001, 'false');\n"
						+ "			\n"
						+ "--responsability filters\n"
						+ "INSERT INTO \"metamodel\".\"ResponsibilityFilter\" (\"This_belongs_to_LifeCycle_with_LifeCycleHasLifeCycleId\",\n"
						+ "							\"This_filters_by_FilterExpression\",\n"
						+ "							\"This_filters_by_Decision_with_DecisionHasDecisionId\")\n"
						+ "			VALUES (5, 'Manager', 5001),\n"
						+ "				(5, 'Accounter', 5001),\n"
						+ "				(5, 'Salesclerk', 5001),\n"
						+ "				(5, 'Shift manager', 5001),\n"
						+ "				(5, 'Checker', 5001),\n"
						+ "				(5, 'Auditor', 5001),\n"
						+ "				(5, 'Storekeeper', 5001),\n"
						+ "				(5, 'Catalog maintainer', 5001),\n"
						+ "				(5, 'Community manager', 5001),\n"
						+ "				(5, 'Procurement worker', 5001),\n"
						+ "				(5, 'System admin', 5001),\n"
						+ "				(5, 'Manager', 5002),\n"
						+ "				(5, 'Shift manager', 5002),\n"
						+ "				(5, 'Catalog maintainer', 5002),\n"
						+ "				(5, 'Manager', 5003),\n"
						+ "				(5, 'Shift manager', 5003),\n"
						+ "				(5, 'Accounter', 5003),\n"
						+ "				(5, 'Catalog maintainer', 5003),\n"
						+ "				(5, 'Auditor', 5003);",
						
						
						
						"/* worker lifecycle */\n"
						+ "\n"
						+ "--stage filters\n"
						+ "INSERT INTO \"metamodel\".\"StageFilter\" (\"StageFilterHasStageFilterId\",\n"
						+ "					\"This_filters_by_FilterExpression\", \n"
						+ "					\"This_belongs_to_LifeCycle_with_LifeCycleHasLifeCycleId\")\n"
						+ "	VALUES (6001, 'soberano.stage.starting', 6),\n"
						+ "		(6002, 'Enabled', 6),\n"
						+ "		(6003, 'Disabled', 6);\n"
						+ "			\n"
						+ "--decisions\n"
						+ "INSERT INTO \"metamodel\".\"Decision\" (\"DecisionHasDecisionId\",\n"
						+ "					\"This_has_Name\",\n"
						+ "					\"This_belongs_to_LifeCycle_with_LifeCycleHasLifeCycleId\",\n"
						+ "					\"This_causes_advance_from_StageFilter_with_StageFilterHasStageFi\",\n"
						+ "					\"This_causes_advance_to_StageFilter_with_StageFilterHasStageFilt\",\n"
						+ "					\"Decision_is_contextual\")\n"
						+ "	VALUES (6001, 'Add', 6, 6001, 2002, 'false'),\n"
						+ "		(6002, 'Apply', 6, 6002, 6002, 'false'),\n"
						+ "		(6003, 'Disable', 6, 6002, 6003, 'false'),\n"
						+ "		(6004, 'Check', 6, 6002, 6002, 'false');\n"
						+ "			\n"
						+ "--responsability filters\n"
						+ "INSERT INTO \"metamodel\".\"ResponsibilityFilter\" (\"This_belongs_to_LifeCycle_with_LifeCycleHasLifeCycleId\",\n"
						+ "							\"This_filters_by_FilterExpression\",\n"
						+ "							\"This_filters_by_Decision_with_DecisionHasDecisionId\")\n"
						+ "			VALUES (6, 'System admin', 6001),\n"
						+ "				(6, 'System admin', 6002),\n"
						+ "				(6, 'System admin', 6003),\n"
						+ "				(6, 'Auditor', 6004);",
						
						
						
						//"/* cash register lifecycle. no lifecycle needed. internal-use-only object. nobody makes decisions on it. */\n"
						
						
						
						////////////////////
						// business facts //
						////////////////////
						
						//singletons
						
						"--insert the only one activity object instance\n"
						+ "--a trigger implementing RULE_EXISTENCE_1 is responsible for inserting the corresponding entity type instance\n"
						+ "INSERT INTO soberano.\"Activity\"(\n"
						+ "	\"ActivityHasActivityId\", \"This_is_identified_by_EntityTypeInstance_id\")\n"
						+ "	VALUES (1, 1);",
						
						
						
						"--insert the only one configuration object instance\n"
						+ "--a trigger implementing RULE_EXISTENCE_2 is responsible for inserting the corresponding entity type instance\n"
						+ "INSERT INTO soberano.\"Configuration\"(\n"
						+ "	\"ConfigurationHasConfigurationId\", \"This_is_identified_by_EntityTypeInstance_id\")\n"
						+ "	VALUES (1, 2);",
						
						
						
						"--insert the only one catalog object instance\n"
						+ "--a trigger implementing RULE_EXISTENCE_3 is responsible for inserting the corresponding entity type instance\n"
						+ "INSERT INTO soberano.\"Catalog\"(\n"
						+ "	\"CatalogHasCatalogId\", \"This_is_identified_by_EntityTypeInstance_id\")\n"
						+ "	VALUES (1, 3);",
						
						
						
						"--insert the only one cash register object instance\n"
						+ "--a trigger implementing RULE_EXISTENCE_4 is responsible for inserting the corresponding entity type instance\n"
						+ "INSERT INTO soberano.\"CashRegister\"(\n"
						+ "	\"CashRegisterHasCashRegisterId\", \"This_is_identified_by_EntityTypeInstance_id\")\n"
						+ "	VALUES (1, 4);",						
						
						//////////////////////
						// business queries //
						//////////////////////
						
						"CREATE OR REPLACE FUNCTION soberano.\"fn_Worker_create\"(\n"
						+ "	firstname character varying,\n"
						+ "	lastname character varying,\n"
						+ "	emailaddress character varying,\n"
						+ "	mobilephonenumber character varying,\n"
						+ "	countrycode character,\n"
						+ "	address character varying,\n"
						+ "	postalcode character varying,\n"
						+ "	town character varying,\n"
						+ "	municipalityid integer,\n"
						+ "	city character varying,\n"
						+ "	provinceid integer,\n"
						+ "	latitude double precision,\n"
						+ "	longitude double precision,\n"
						+ "	responsibilities integer[],\n"
						+ "	authorities integer[],\n"
						+ "	loginname character varying)\n"
						+ "    RETURNS integer\n"
						+ "    LANGUAGE 'plpgsql'\n"
						+ "    COST 100\n"
						+ "    VOLATILE PARALLEL UNSAFE\n"
						+ "AS $BODY$\n"
						+ "	DECLARE\n"
						+ "		entityTypeInstanceId integer;\n"
						+ "		userId integer;\n"
						+ "		postalAddressId integer;\n"
						+ "		contactDataId integer;\n"
						+ "		workerId integer;\n"
						+ "	BEGIN\n"
						+ "		--default returning value. user has no right.\n"
						+ "		workerId = -1;	\n"
						+ "		\n"
						+ "		--create entity type instance	\n"
						+ "		SELECT soberano.\"fn_EntityTypeInstance_create\"('Worker', loginname)\n"
						+ "			INTO entityTypeInstanceId;\n"
						+ "			\n"
						+ "		--user has rights to create instance of that entity type\n"
						+ "		IF entityTypeInstanceId > 0 THEN\n"
						+ "		\n"
						+ "			--create user. new user's loginname is its email address.\n"
						+ "			SELECT \"metamodel\".\"fn_User_insert\"(emailAddress, true) INTO userId;\n"
						+ "			\n"
						+ "			--assign responsibilities\n"
						+ "			PERFORM \"metamodel\".\"fn_User_assignToResponsibilities\"(userId, responsibilities, authorities);\n"
						+ "			\n"
						+ "			--create postal address\n"
						+ "			INSERT INTO soberano.\"PostalAddress\"(\"This_includes_Town\", \n"
						+ "												 \"This_includes_PostalCode\", \n"
						+ "												 \"This_includes_AddressString\", \n"
						+ "												 \"This_includes_Latitute\", \n"
						+ "												 \"This_includes_Longitude\", \n"
						+ "												 \"This_includes_City\", \n"
						+ "												 \"This_includes_Municipality_with_MunicipalityHasMunicipalityId\")\n"
						+ "				VALUES (town,\n"
						+ "					   postalCode,\n"
						+ "					   address,\n"
						+ "					   latitude,\n"
						+ "					   longitude,\n"
						+ "					   city,\n"
						+ "					   municipalityId) \n"
						+ "				RETURNING \"PostalAddressHasPostalAddressId\" INTO postalAddressId;\n"
						+ "				\n"
						+ "			--create contact data\n"
						+ "			INSERT INTO soberano.\"ContactData\"(\"This_includes_PhoneNumber\", \n"
						+ "											   \"This_includes_EmailAddress\", \n"
						+ "											   \"This_includes_PostalAddress_with_PostalAddressHasPostalAddressI\")\n"
						+ "				VALUES (mobilePhoneNumber,\n"
						+ "					   emailAddress,\n"
						+ "					   postalAddressId) \n"
						+ "				RETURNING \"ContactDataHasContactDataId\" INTO contactDataId;\n"
						+ "				\n"
						+ "			--create worker\n"
						+ "			INSERT INTO soberano.\"Worker\"(\"This_has_LastName\", \n"
						+ "										  \"This_has_FirstName\", \n"
						+ "										  \"This_is_identified_by_EntityTypeInstance_id\", \n"
						+ "										  \"This_has_ContactData_with_ContactDataHasContactDataId\",\n"
						+ "										  \"This_has_LoginName\")\n"
						+ "				VALUES (lastName,\n"
						+ "					   firstName,\n"
						+ "					   entityTypeInstanceId,\n"
						+ "					   contactDataId,\n"
						+ "					   emailAddress) \n"
						+ "				RETURNING \"WorkerHasWorkerId\" INTO workerId;\n"
						+ "		END IF;\n"
						+ "		RETURN workerId;\n"
						+ "END;\n"
						+ "$BODY$;",
						
						
						
						"CREATE OR REPLACE FUNCTION soberano.\"fn_Worker_getAll\"(loginname character varying)\n"
						+ "    RETURNS TABLE(\"domainObjectId\" integer, \"domainObjectName\" text) \n"
						+ "    LANGUAGE 'plpgsql'\n"
						+ "    COST 100\n"
						+ "    VOLATILE PARALLEL UNSAFE\n"
						+ "    ROWS 300\n"
						+ "\n"
						+ "AS $BODY$\n"
						+ "	BEGIN\n"
						+ "		RETURN QUERY SELECT DISTINCT \"WorkerHasWorkerId\", \"This_has_FirstName\" || ' ' || \"This_has_LastName\" || ' : ' || worker.\"This_has_LoginName\" \n"
						+ "						FROM metamodel.\"fn_EntityTypeInstance_getDecisions\"(6, 1, loginname) instance\n"
						+ "							INNER JOIN soberano.\"Worker\" worker\n"
						+ "								ON instance.\"InstanceId\" = worker.\"This_is_identified_by_EntityTypeInstance_id\"\n"
						+ "							INNER JOIN metamodel.\"User\" u\n"
						+ "								ON u.\"This_has_LoginName\" = worker.\"This_has_LoginName\";\n"
						+ "	END;	\n"
						+ "$BODY$;",
						
						
						
						"CREATE OR REPLACE FUNCTION soberano.\"fn_Country_getAll\"()\n"
						+ "	RETURNS TABLE(\"domainObjectStringId\" character(2), \"domainObjectName\" character varying) AS\n"
						+ "	$BODY$\n"
						+ "	BEGIN\n"
						+ "		RETURN QUERY SELECT \"CountryHasCountryCode\", \"This_has_Name\" FROM soberano.\"Country\" ORDER BY \"This_has_Name\";\n"
						+ "	END;\n"
						+ "	$BODY$\n"
						+ "	LANGUAGE plpgsql VOLATILE COST 100 ROWS 300;",
						
						
						
						"CREATE OR REPLACE FUNCTION soberano.\"fn_Province_getAll\"(countrycode character)\n"
						+ "    RETURNS TABLE(\"domainObjectId\" integer, \"domainObjectName\" character varying) \n"
						+ "    LANGUAGE 'plpgsql'\n"
						+ "    COST 100\n"
						+ "    VOLATILE PARALLEL UNSAFE\n"
						+ "    ROWS 100\n"
						+ "AS $BODY$\n"
						+ "	BEGIN\n"
						+ "		RETURN QUERY SELECT \"ProvinceHasProvinceId\", \"This_has_Name\" \n"
						+ "			FROM soberano.\"Province\" \n"
						+ "			WHERE \"This_belongs_to_Country_with_CountryHasCountryCode\" = countryCode\n"
						+ "			ORDER BY \"This_has_Name\";\n"
						+ "	END;	\n"
						+ "$BODY$;",
						
						
						
						"CREATE OR REPLACE FUNCTION soberano.\"fn_Municipality_getAll\"(provinceId integer)\n"
						+ "    RETURNS TABLE(\"domainObjectId\" integer, \"domainObjectName\" character varying) \n"
						+ "    LANGUAGE 'plpgsql'\n"
						+ "    COST 100\n"
						+ "    VOLATILE PARALLEL UNSAFE\n"
						+ "    ROWS 100\n"
						+ "AS $BODY$\n"
						+ "	BEGIN\n"
						+ "		RETURN QUERY SELECT \"MunicipalityHasMunicipalityId\", \"This_has_Name\" \n"
						+ "			FROM soberano.\"Municipality\" \n"
						+ "			WHERE \"This_belongs_to_Province_with_ProvinceHasProvinceId\" = provinceId\n"
						+ "			ORDER BY \"This_has_Name\";\n"
						+ "	END;	\n"
						+ "$BODY$;",
						
						
						
						"CREATE OR REPLACE FUNCTION soberano.\"fn_Worker_get\"(workerid integer,\n"
						+ "													loginname character varying)\n"
						+ "    RETURNS TABLE(\"workerId\" integer, \n"
						+ "				  \"entityTypeInstanceId\" integer, \n"
						+ "				  \"loginName\" character varying, \n"
						+ "				  \"firstName\" character varying, \n"
						+ "				  \"lastName\" character varying, \n"
						+ "				  password character varying, \n"
						+ "				  \"mobilePhoneNumber\" character varying, \n"
						+ "				  \"countryCode\" character, \n"
						+ "				  address character varying, \n"
						+ "				  \"postalCode\" character varying, \n"
						+ "				  town character varying, \n"
						+ "				  \"municipalityId\" integer, \n"
						+ "				  city character varying, \n"
						+ "				  \"provinceId\" integer, \n"
						+ "				  latitude double precision, \n"
						+ "				  longitude double precision,\n"
						+ "				  \"authorityId\" integer,\n"
						+ "				  \"authorityName\" character varying,\n"
						+ "				  \"responsibilityId\" integer,\n"
						+ "				  \"responsibilityName\" character varying) \n"
						+ "    LANGUAGE 'plpgsql'\n"
						+ "    COST 100\n"
						+ "    VOLATILE PARALLEL UNSAFE\n"
						+ "    ROWS 300\n"
						+ "\n"
						+ "AS $BODY$\n"
						+ "	BEGIN\n"
						+ "		RETURN QUERY SELECT DISTINCT \"WorkerHasWorkerId\",\n"
						+ "										\"This_is_identified_by_EntityTypeInstance_id\",\n"
						+ "										workeruser.\"This_has_LoginName\",\n"
						+ "										\"This_has_FirstName\",\n"
						+ "										\"This_has_LastName\",\n"
						+ "										CAST('' AS character varying),\n"
						+ "										\"This_includes_PhoneNumber\",\n"
						+ "										\"This_belongs_to_Country_with_CountryHasCountryCode\",\n"
						+ "										\"This_includes_AddressString\",\n"
						+ "										\"This_includes_PostalCode\",\n"
						+ "										\"This_includes_Town\",\n"
						+ "										\"This_includes_Municipality_with_MunicipalityHasMunicipalityId\",\n"
						+ "										\"This_includes_City\",\n"
						+ "										\"This_belongs_to_Province_with_ProvinceHasProvinceId\",\n"
						+ "										\"This_includes_Latitute\",\n"
						+ "										\"This_includes_Longitude\",\n"
						+ "									 	1,\n"
						+ "										CAST('soberano.authority.top' AS character varying),\n"
						+ "										responsibility.\"ResponsibilityHasResponsibilityId\",\n"
						+ "										responsibility.\"This_has_Name\"\n"
						+ "								FROM soberano.\"Worker\" worker\n"
						+ "									INNER JOIN soberano.\"ContactData\" contact\n"
						+ "										ON worker.\"This_has_ContactData_with_ContactDataHasContactDataId\" = contact.\"ContactDataHasContactDataId\"\n"
						+ "									INNER JOIN soberano.\"PostalAddress\" address\n"
						+ "										ON contact.\"This_includes_PostalAddress_with_PostalAddressHasPostalAddressI\" = address.\"PostalAddressHasPostalAddressId\"\n"
						+ "									INNER JOIN soberano.\"Municipality\" municipality\n"
						+ "										ON address.\"This_includes_Municipality_with_MunicipalityHasMunicipalityId\" = municipality.\"MunicipalityHasMunicipalityId\"\n"
						+ "									INNER JOIN soberano.\"Province\" province\n"
						+ "										ON municipality.\"This_belongs_to_Province_with_ProvinceHasProvinceId\" = province.\"ProvinceHasProvinceId\"\n"
						+ "									INNER JOIN metamodel.\"User\" workeruser\n"
						+ "										ON worker.\"This_has_LoginName\" = workeruser.\"This_has_LoginName\"\n"
						+ "									INNER JOIN metamodel.\"UserIsAssignedToResponsibilityForAuthority\" userassignment\n"
						+ "										ON userassignment.\"UserHasUserId\" = workeruser.\"UserHasUserId\"\n"
						+ "									INNER JOIN metamodel.\"Responsibility\" responsibility\n"
						+ "										ON userassignment.\"ResponsibilityHasResponsibilityId\" = responsibility.\"ResponsibilityHasResponsibilityId\" \n"
						+ "								WHERE \"WorkerHasWorkerId\" = workerid\n"
						+ "									AND EXISTS (SELECT metamodel.\"fn_EntityTypeInstance_getDecisions\"(\"This_is_identified_by_EntityTypeInstance_id\", loginname));\n"
						+ "	END;	\n"
						+ "$BODY$;",
						
						
						
						////////////////////
						// business facts //
						////////////////////
						
						//countries and provinces
						
						"INSERT INTO soberano.\"Country\"(\"CountryHasCountryCode\", \"This_has_Name\")\n"
						+ "	VALUES ('CU', 'Cuba');\n"
						+ "	\n"
						+ "INSERT INTO soberano.\"Province\"(\"ProvinceHasProvinceId\", \"This_has_Name\", \"This_belongs_to_Country_with_CountryHasCountryCode\")\n"
						+ "	VALUES (1, 'Pinar del Río', 'CU'),\n"
						+ "		(2, 'La Habana', 'CU'),\n"
						+ "		(3, 'Matanzas', 'CU'),\n"
						+ "		(4, 'Villa Clara', 'CU'),\n"
						+ "		(5, 'Isla de la Juventud', 'CU'),\n"
						+ "		(6, 'Artemisa', 'CU'),\n"
						+ "		(7, 'Mayabeque', 'CU'),\n"
						+ "		(8, 'Guantánamo', 'CU'),\n"
						+ "		(9, 'Santiago de Cuba', 'CU'),\n"
						+ "		(10, 'Granma', 'CU'),\n"
						+ "		(11, 'Holguín', 'CU'),\n"
						+ "		(12, 'Las Tunas', 'CU'),\n"
						+ "		(13, 'Camagüey', 'CU'),\n"
						+ "		(14, 'Ciego de Ávila', 'CU'),\n"
						+ "		(15, 'Sancti Spíritus', 'CU'),\n"
						+ "		(16, 'Cienfuegos', 'CU');",
						
						//municipalities
						
						"INSERT INTO soberano.\"Municipality\"(\"This_has_Name\", \"This_belongs_to_Province_with_ProvinceHasProvinceId\")\n"
						+ "			VALUES	('Mantua', 1),\n"
						+ "					('Minas de Matahambre', 1),\n"
						+ "					('Viñales', 1),\n"
						+ "					('La Palma', 1),\n"
						+ "					('Los Palacios', 1),\n"
						+ "					('San Luis', 1),\n"
						+ "					('Guane', 1),\n"
						+ "					('Sandino', 1),\n"
						+ "					('Consolación del Sur', 1),\n"
						+ "					('Pinar del Río', 1),\n"
						+ "					('San Juan y Martínez', 1),\n"
						+ "					('Playa', 2),\n"
						+ "					('Plaza de la Revolución', 2),\n"
						+ "					('Centro Habana', 2),\n"
						+ "					('La Habana Vieja', 2),\n"
						+ "					('Regla', 2),\n"
						+ "					('La Habana del Este', 2),\n"
						+ "					('Guanabacoa', 2),\n"
						+ "					('San Miguel del Padrón', 2),\n"
						+ "					('Diez de Octubre', 2),\n"
						+ "					('Cerro', 2),\n"
						+ "					('Marianao', 2),\n"
						+ "					('La Lisa', 2),\n"
						+ "					('Boyeros', 2),\n"
						+ "					('Arroyo Naranjo', 2),\n"
						+ "					('Cotorro', 2),\n"
						+ "					('Matanzas', 3),\n"
						+ "					('Cárdenas', 3),\n"
						+ "					('Antiguo - Varadero', 3),\n"
						+ "					('Colón', 3),\n"
						+ "					('Perico', 3),\n"
						+ "					('Jovellanos', 3),\n"
						+ "					('Pedro Betancourt', 3),\n"
						+ "					('Limonar', 3),\n"
						+ "					('Unión de Reyes', 3),\n"
						+ "					('Ciénaga de Zapata', 3),\n"
						+ "					('Jaguey Grande', 3),\n"
						+ "					('Calimete', 3),\n"
						+ "					('Los Arabos', 3),\n"
						+ "					('Martí', 3),\n"
						+ "					('Corralillo', 4),\n"
						+ "					('Quemado de Guines', 4),\n"
						+ "					('Sagua la Grande', 4),\n"
						+ "					('Encrucijada', 4),\n"
						+ "					('Camajuaní', 4),\n"
						+ "					('Caibarién', 4),\n"
						+ "					('Remedios', 4),\n"
						+ "					('Placetas', 4),\n"
						+ "					('Santa Clara', 4),\n"
						+ "					('Cifuentes', 4),\n"
						+ "					('Santo Domingo', 4),\n"
						+ "					('Ranchuelo', 4),\n"
						+ "					('Manicaragua', 4),\n"
						+ "					('Aguada de Pasajeros', 16),\n"
						+ "					('Rodas', 16),\n"
						+ "					('Palmira', 16),\n"
						+ "					('Lajas', 16),\n"
						+ "					('Cruces', 16),\n"
						+ "					('Cumanayagua', 16),\n"
						+ "					('Cienfuegos', 16),\n"
						+ "					('Abreus', 16),\n"
						+ "					('Yaguajay', 15),\n"
						+ "					('Jatibonico', 15),\n"
						+ "					('Taguasco', 15),\n"
						+ "					('Cabaiguán', 15),\n"
						+ "					('Fomento', 15),\n"
						+ "					('Trinidad', 15),\n"
						+ "					('La Sierpe', 15),\n"
						+ "					('Sancti Spíritus', 15),\n"
						+ "					('Chambas', 14),\n"
						+ "					('Morón', 14),\n"
						+ "					('Bolivia', 14),\n"
						+ "					('Primero de Enero', 14),\n"
						+ "					('Ciro Redondo', 14),\n"
						+ "					('Florencia', 14),\n"
						+ "					('Majagua', 14),\n"
						+ "					('Venezuela', 14),\n"
						+ "					('Baraguá', 14),\n"
						+ "					('Ciego de Ávila', 14),\n"
						+ "					('Carlos Manuel de Céspedes', 13),\n"
						+ "					('Esmeralda', 13),\n"
						+ "					('Sierra de Cubitas', 13),\n"
						+ "					('Minas', 13),\n"
						+ "					('Nuevitas', 13),\n"
						+ "					('Sibanicú', 13),\n"
						+ "					('Camaguey', 13),\n"
						+ "					('Florida', 13),\n"
						+ "					('Vertientes', 13),\n"
						+ "					('Jimaguayú', 13),\n"
						+ "					('Najasa', 13),\n"
						+ "					('Santa Cruz del Sur', 13),\n"
						+ "					('Guáimaro', 13),\n"
						+ "					('Manatí', 12),\n"
						+ "					('Puerto Padre', 12),\n"
						+ "					('Majibacoa', 12),\n"
						+ "					('Las Tunas', 12),\n"
						+ "					('Jobabo', 12),\n"
						+ "					('Colombia', 12),\n"
						+ "					('Amancio', 12),\n"
						+ "					('Jesús Menéndez', 12),\n"
						+ "					('Gibara', 11),\n"
						+ "					('Rafael Freyre', 11),\n"
						+ "					('Banes', 11),\n"
						+ "					('Antilla', 11),\n"
						+ "					('Báguanos', 11),\n"
						+ "					('Holguín', 11),\n"
						+ "					('Cacocúm', 11),\n"
						+ "					('Urbano Noris', 11),\n"
						+ "					('Cueto', 11),\n"
						+ "					('Sagua de Tánamo', 11),\n"
						+ "					('Moa', 11),\n"
						+ "					('Calixto García', 11),\n"
						+ "					('Mayarí', 11),\n"
						+ "					('Frank País', 11),\n"
						+ "					('Cauto Cristo', 10),\n"
						+ "					('Bayamo', 10),\n"
						+ "					('Yara', 10),\n"
						+ "					('Manzanillo', 10),\n"
						+ "					('Campechuela', 10),\n"
						+ "					('Media Luna', 10),\n"
						+ "					('Niquero', 10),\n"
						+ "					('Pilón', 10),\n"
						+ "					('Bartolomé Masó', 10),\n"
						+ "					('Buey Arriba', 10),\n"
						+ "					('Guisa', 10),\n"
						+ "					('Río Cauto', 10),\n"
						+ "					('Jiguaní', 10),\n"
						+ "					('Contramaestre', 9),\n"
						+ "					('Mella', 9),\n"
						+ "					('San Luis', 9),\n"
						+ "					('Segundo Frente', 9),\n"
						+ "					('Songo - La Maya', 9),\n"
						+ "					('Santiago de Cuba', 9),\n"
						+ "					('Palma Soriano', 9),\n"
						+ "					('Tercer Frente', 9),\n"
						+ "					('Guamá', 9),\n"
						+ "					('El Salvador', 8),\n"
						+ "					('Guantánamo', 8),\n"
						+ "					('Yateras', 8),\n"
						+ "					('Baracoa', 8),\n"
						+ "					('Imías', 8),\n"
						+ "					('San Antonio del Sur', 8),\n"
						+ "					('Manuel Támes', 8),\n"
						+ "					('Caimanera', 8),\n"
						+ "					('Niceto Pérez', 8),\n"
						+ "					('Maisí', 8),\n"
						+ "					('Isla de la Juventud', 5),\n"
						+ "					('Bahía Honda', 6),\n"
						+ "					('Mariel', 6),\n"
						+ "					('Guanajay', 6),\n"
						+ "					('Caimito', 6),\n"
						+ "					('Bauta', 6),\n"
						+ "					('San antonio de los Baños', 6),\n"
						+ "					('Guira de Melena', 6),\n"
						+ "					('Alquizar', 6),\n"
						+ "					('Artemisa', 6),\n"
						+ "					('Candelaria', 6),\n"
						+ "					('San Cristóbal', 6),\n"
						+ "					('Bejucal', 7),\n"
						+ "					('San José de las Lajas', 7),\n"
						+ "					('Jaruco', 7),\n"
						+ "					('Santa Cruz del Norte', 7),\n"
						+ "					('Madruga', 7),\n"
						+ "					('Nueva Paz', 7),\n"
						+ "					('San Nicolás', 7),\n"
						+ "					('Guines', 7),\n"
						+ "					('Melena del Sur', 7),\n"
						+ "					('Batabanó', 7),\n"
						+ "					('Quivicán', 7);",
						
						////////////////////
						// helper queries //
						////////////////////
						
						"--returns the new entity type instance's id, or -1 in case the user doesn't have rights to create\n"
						+ "--instances of that entity type\n"
						+ "CREATE OR REPLACE FUNCTION soberano.\"fn_EntityTypeInstance_create\"(\n"
						+ "	entitytypename character varying,\n"
						+ "	loginname character varying)\n"
						+ "    RETURNS integer\n"
						+ "    LANGUAGE 'plpgsql'\n"
						+ "    COST 100\n"
						+ "    VOLATILE PARALLEL UNSAFE\n"
						+ "AS $BODY$\n"
						+ "	DECLARE\n"
						+ "		entityTypeInstanceId integer;\n"
						+ "	BEGIN\n"
						+ "		SELECT \"metamodel\".\"fn_EntityTypeInstance_create\"(1, \n"
						+ "														\"MeaningHasMeaningId\",\n"
						+ "														loginname)\n"
						+ "			FROM \"metamodel\".\"Meaning\"\n"
						+ "			WHERE \"This_has_Name\" = entityTypeName\n"
						+ "			INTO entityTypeInstanceId;\n"
						+ "		IF entityTypeInstanceId > 0 THEN \n"
						+ "			RETURN entityTypeInstanceId;\n"
						+ "		ELSE \n"
						+ "			RETURN -1;\n"
						+ "		END IF;\n"
						+ "	END;	\n"
						+ "$BODY$;",
						
						"--optimizations\n"
						+ "CREATE INDEX IF NOT EXISTS index1\n"
						+ "    ON soberano.\"Worker\" USING btree\n"
						+ "    (\"This_has_LoginName\" COLLATE pg_catalog.\"default\" ASC NULLS LAST)\n"
						+ "    TABLESPACE pg_default;"
					}
				)
			);
	}
}
