--------------------------
|| TEST CASES SELECTION ||
--------------------------

1) Test cases are generated by means of PICT tool provided by Microsoft TM.

2) .pict files are the inputs to pict.

3) .xls files (Excel) are the outputs from pict.

4) Pict execution command line example for order 3 (order 3 generates more cases than pairwise): pict responsibilities.pict > responsibilities_test_cases.xls /o:3

5) Test cases of interest, not generated by PICT, are added manually and highlighted with a yellow background.

6) The final sets of test cases are stored in .xls files with names ending in "_enriched".

-------------------------------
|| TESTING APPROACH OVERVIEW ||
-------------------------------

1) As long as Soberano has to do mostly with business automation (business rules, organizational structure, processes),
it's accepted the tight coupling of these elements.

2) That's the main reason why it was chosen a testing approach forcing an ordering on the test execution order.

3) Tests are grouped in classes.

4) Each test class's name is prefixed with the number of the order in which it is executed. For example: "O1_...", "O2_..."

5) The assumption here is, since the system follows the business and not the opposite, the more business states covered
the more pieces of system|system states|system state transitions|user interactions tested.

6) If needed, you always might go further than pairwise testing, or add additional discovered cases manually.

7) For every test, once preconditions are set, ZATS Mimic -by zkoss.org- is the tool used to evaluate the system with test
cases, from the zul files (user interactions) to the screen outputs|state changes. This aims to cover as much system components
as possible.

